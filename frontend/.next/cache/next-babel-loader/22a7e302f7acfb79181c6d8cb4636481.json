{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from \"graphql-tag\";\nconst ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY {\n        allProducts {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nconst Center = styled.div`\n\ttext-align: center;\n\n\t.buttonup {\n\t    width: auto;\n\t    color: white;\n\t    background-color: ${props => props.theme.orange};\n\t    border: 0;\n\t    border-radius: ${props => props.theme.roundedCorner} !important;\n\t    font-size: 1rem;\n\t    padding: 0.9rem 1.2rem;\n  \t}\n`;\nconst ItemsList = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: auto auto auto auto;\n\tgrid-gap: 60px;\n\tmax-width: ${props => props.theme.maxWidth};\n\tmargin: 0 auto;\n\t@media (max-width: 830px) {\n\t\tgrid-template-columns: 1fr 1fr;\n\t\tgrid-gap: 0%;\n\t\ta {\n    \t\tfont-size: 1.2rem;\n\t\t}\n\t}\n\t@media (max-width: 500px) {\n\t\tgrid-template-columns: 1fr;\n\t\tgrid-gap: 0%;\n\t}\n`;\nexport default function Products() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY);\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(ItemsList, {\n      children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/Products.js"],"names":["useQuery","gql","ALL_PRODUCTS_QUERY","Center","styled","div","props","theme","orange","roundedCorner","ItemsList","maxWidth","Products","data","error","loading","console","log","message","allProducts","map","product","name","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,kBAAkB,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAME,MAAM,GAAGC,MAAM,CAACC,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,yBAAyBC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAO;AACrD;AACA,sBAAsBF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,aAAc;AACzD;AACA;AACA;AACA,CAZA;AAcA,MAAMC,SAAS,GAAGN,MAAM,CAACC,GAAI;AAC7B;AACA;AACA;AACA,cAAcC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,QAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,eAAe,SAASC,QAAT,GAAqB;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2Bf,QAAQ,CAACE,kBAAD,CAAzC;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAaJ,IAAb,EAAmBC,KAAnB,EAA0BC,OAA1B;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,SAAD;AAAA,gBAAYL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBAC7B;AAAA,kBAAqBA,OAAO,CAACC;AAA7B,SAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cADQ;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from \"graphql-tag\";\r\n\r\nconst ALL_PRODUCTS_QUERY = gql`\r\n    query ALL_PRODUCTS_QUERY {\r\n        allProducts {\r\n            id\r\n            name\r\n            price\r\n            description\r\n            photo {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Center = styled.div`\r\n\ttext-align: center;\r\n\r\n\t.buttonup {\r\n\t    width: auto;\r\n\t    color: white;\r\n\t    background-color: ${props => props.theme.orange};\r\n\t    border: 0;\r\n\t    border-radius: ${props => props.theme.roundedCorner} !important;\r\n\t    font-size: 1rem;\r\n\t    padding: 0.9rem 1.2rem;\r\n  \t}\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: auto auto auto auto;\r\n\tgrid-gap: 60px;\r\n\tmax-width: ${props => props.theme.maxWidth};\r\n\tmargin: 0 auto;\r\n\t@media (max-width: 830px) {\r\n\t\tgrid-template-columns: 1fr 1fr;\r\n\t\tgrid-gap: 0%;\r\n\t\ta {\r\n    \t\tfont-size: 1.2rem;\r\n\t\t}\r\n\t}\r\n\t@media (max-width: 500px) {\r\n\t\tgrid-template-columns: 1fr;\r\n\t\tgrid-gap: 0%;\r\n\t}\r\n`;\r\n\r\nexport default function Products () {\r\n    const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\r\n    console.log( data, error, loading )\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>;\r\n    return (\r\n        <Center>\r\n            <ItemsList>{data.allProducts.map((product) => (\r\n                <p key={product.id}>{product.name}</p>\r\n            ))}</ItemsList>\r\n        </Center>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}