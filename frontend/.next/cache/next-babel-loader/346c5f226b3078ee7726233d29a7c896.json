{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories\\\\stax-shop\\\\Advanced-React\\\\stax\\\\frontend\\\\components\\\\RemoveFromCart.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation removeFromCart($id: ID!) {\\n\\t\\tremoveFromCart(id: $id) {\\n\\t\\t\\tid\\n\\t\\t\\tquantity\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nvar REMOVE_FROM_CART_MUTATION = gql(_templateObject());\nvar RemoveButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__RemoveButton\",\n  componentId: \"oab7xi-0\"\n})([\"font-size:1.5rem;background:none;border:0;color:\", \";&:hover{color:\", \";cursor:pointer;}\"], function (props) {\n  return props.theme.grey;\n}, function (props) {\n  return props.theme.red;\n});\n\nvar RemoveFromCart = /*#__PURE__*/function (_React$Component) {\n  _inherits(RemoveFromCart, _React$Component);\n\n  var _super = _createSuper(RemoveFromCart);\n\n  function RemoveFromCart() {\n    var _this;\n\n    _classCallCheck(this, RemoveFromCart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      // 1. first read the cache\n      var data = cache.readQuery({\n        query: CURRENT_USER_QUERY\n      }); // 2. remove that item from the cart\n\n      var cartItemId = payload.data.removeFromCart.id;\n      data.me.cart = data.me.cart.filter(function (cartItem) {\n        return cartItem.id !== cartItemId;\n      }); // 3. write it back to the cache\n\n      cache.writeQuery({\n        query: CURRENT_USER_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RemoveFromCart, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Mutation, {\n        mutation: REMOVE_FROM_CART_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update,\n        optimisticResponse: {\n          __typename: 'Mutation',\n          removeFromCart: {\n            __typename: 'CartItem',\n            id: this.props.id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, function (removeFromCart, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return /*#__PURE__*/React.createElement(RemoveButton, {\n          disabled: loading,\n          onClick: function onClick() {\n            removeFromCart()[\"catch\"](function (err) {\n              return alert(err.message);\n            });\n          },\n          title: \"Delete Item\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faTimes,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }\n        }));\n      });\n    }\n  }]);\n\n  return RemoveFromCart;\n}(React.Component);\n\n_defineProperty(RemoveFromCart, \"propTypes\", {\n  id: PropTypes.string.isRequired\n});\n\nexport default RemoveFromCart;\nexport { REMOVE_FROM_CART_MUTATION };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories/stax-shop/Advanced-React/stax/frontend/components/RemoveFromCart.js"],"names":["React","Mutation","gql","styled","PropTypes","CURRENT_USER_QUERY","FontAwesomeIcon","faTimes","REMOVE_FROM_CART_MUTATION","RemoveButton","button","props","theme","grey","red","RemoveFromCart","cache","payload","data","readQuery","query","cartItemId","removeFromCart","id","me","cart","filter","cartItem","writeQuery","update","__typename","loading","error","err","alert","message","Component","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACIC,OADJ,QAEO,mCAFP;AAIA,IAAMC,yBAAyB,GAAGN,GAAH,mBAA/B;AASA,IAAMO,YAAY,GAAGN,MAAM,CAACO,MAAV;AAAA;AAAA;AAAA,iGAIP,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,IAAhB;AAAA,CAJE,EAML,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYE,GAAhB;AAAA,CANA,CAAlB;;IAWMC,c;;;;;;;;;;;;;;;;6DAKK,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC3B;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OAAhB,CAAb,CAF2B,CAG3B;;AACA,UAAMgB,UAAU,GAAGJ,OAAO,CAACC,IAAR,CAAaI,cAAb,CAA4BC,EAA/C;AACAL,MAAAA,IAAI,CAACM,EAAL,CAAQC,IAAR,GAAeP,IAAI,CAACM,EAAL,CAAQC,IAAR,CAAaC,MAAb,CAAoB,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACJ,EAAT,KAAgBF,UAApB;AAAA,OAA5B,CAAf,CAL2B,CAM3B;;AACAL,MAAAA,KAAK,CAACY,UAAN,CAAiB;AAAER,QAAAA,KAAK,EAAEf,kBAAT;AAA6Ba,QAAAA,IAAI,EAAJA;AAA7B,OAAjB;AACD,K;;;;;;;6BACQ;AAAA;;AACP,0BACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEV,yBADZ;AAEE,QAAA,SAAS,EAAE;AAAEe,UAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWY;AAAjB,SAFb;AAGE,QAAA,MAAM,EAAE,KAAKM,MAHf;AAIE,QAAA,kBAAkB,EAAE;AAClBC,UAAAA,UAAU,EAAE,UADM;AAElBR,UAAAA,cAAc,EAAE;AACdQ,YAAAA,UAAU,EAAE,UADE;AAEdP,YAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWY;AAFD;AAFE,SAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYG,UAACD,cAAD;AAAA,YAAmBS,OAAnB,QAAmBA,OAAnB;AAAA,YAA4BC,KAA5B,QAA4BA,KAA5B;AAAA,4BACC,oBAAC,YAAD;AACE,UAAA,QAAQ,EAAED,OADZ;AAEE,UAAA,OAAO,EAAE,mBAAM;AACbT,YAAAA,cAAc,WAAd,CAAuB,UAAAW,GAAG;AAAA,qBAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAT;AAAA,aAA1B;AACD,WAJH;AAKE,UAAA,KAAK,EAAC,aALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOA,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAE5B,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPA,CADD;AAAA,OAZH,CADF;AA0BD;;;;EAzC0BP,KAAK,CAACoC,S;;gBAA7BrB,c,eACe;AACjBQ,EAAAA,EAAE,EAAEnB,SAAS,CAACiC,MAAV,CAAiBC;AADJ,C;;AA2CrB,eAAevB,cAAf;AACA,SAASP,yBAAT","sourcesContent":["import React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faTimes,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst REMOVE_FROM_CART_MUTATION = gql`\r\n\tmutation removeFromCart($id: ID!) {\r\n\t\tremoveFromCart(id: $id) {\r\n\t\t\tid\r\n\t\t\tquantity\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst RemoveButton = styled.button`\r\n  font-size: 1.5rem;\r\n  background: none;\r\n  border: 0;\r\n  color: ${props => props.theme.grey};\r\n  &:hover {\r\n    color: ${props => props.theme.red};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nclass RemoveFromCart extends React.Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n  };\r\n  // This gets called as soon as we get a response back from the server after a mutation has been performed\r\n  update = (cache, payload) => {\r\n    // 1. first read the cache\r\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY });\r\n    // 2. remove that item from the cart\r\n    const cartItemId = payload.data.removeFromCart.id;\r\n    data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId);\r\n    // 3. write it back to the cache\r\n    cache.writeQuery({ query: CURRENT_USER_QUERY, data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_CART_MUTATION}\r\n        variables={{ id: this.props.id }}\r\n        update={this.update}\r\n        optimisticResponse={{\r\n          __typename: 'Mutation',\r\n          removeFromCart: {\r\n            __typename: 'CartItem',\r\n            id: this.props.id,\r\n          },\r\n        }}\r\n      >\r\n        {(removeFromCart, { loading, error }) => (\r\n          <RemoveButton\r\n            disabled={loading}\r\n            onClick={() => {\r\n              removeFromCart().catch(err => alert(err.message));\r\n            }}\r\n            title=\"Delete Item\"\r\n          >\r\n          <FontAwesomeIcon icon={faTimes} />\r\n          </RemoveButton>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RemoveFromCart;\r\nexport { REMOVE_FROM_CART_MUTATION };"]},"metadata":{},"sourceType":"module"}