{"ast":null,"code":"import _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\lib\\\\cartState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext } from 'react';\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  var children = _ref.children;\n\n  // This is our own custom provider! We will store data (state) and functionality\n  // updaters in here and anyone can access it via the consumer!\n  var _false = false,\n      _false2 = _slicedToArray(_false, 2),\n      cartOpen = _false2[0],\n      setCartOpen = _false2[1];\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s();\n\n  // We use a consumer here to access the local state\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/lib/cartState.js"],"names":["createContext","useContext","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","useCart","all"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAEA,IAAMC,iBAAiB,gBAAGF,aAAa,EAAvC;AACA,IAAMG,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,OAAyC;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACrC;AACA;AAFqC,eAIL,KAJK;AAAA;AAAA,MAI9BC,QAJ8B;AAAA,MAIpBC,WAJoB;;AAMrC,sBACI,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA;AAAF,KAA3B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,C,CAED;;;KAbSD,iB;;AAcT,SAASI,OAAT,GAAmB;AAAA;;AACf;AACA,MAAMC,GAAG,GAAGT,UAAU,CAACC,iBAAD,CAAtB;AACA,SAAOQ,GAAP;AACH;;GAJQD,O;;AAKT,SAASJ,iBAAT,EAA4BI,OAA5B","sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nfunction CartStateProvider({ children }) {\r\n    // This is our own custom provider! We will store data (state) and functionality\r\n    // updaters in here and anyone can access it via the consumer!\r\n\r\n    const [cartOpen, setCartOpen] = false;\r\n\r\n    return (\r\n        <LocalStateProvider value={{ cartOpen }}>\r\n            {children}\r\n        </LocalStateProvider>\r\n    );\r\n}\r\n\r\n// make a custom hook for accessing the cart local state\r\nfunction useCart() {\r\n    // We use a consumer here to access the local state\r\n    const all = useContext(LocalStateContext);\r\n    return all;\r\n}\r\nexport { CartStateProvider, useCart };"]},"metadata":{},"sourceType":"module"}