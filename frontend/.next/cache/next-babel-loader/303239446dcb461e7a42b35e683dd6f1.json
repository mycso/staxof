{"ast":null,"code":"import _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\components\\\\DeleteProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation DELETE_PRODUCT_MUTATION($id: ID!) {\\n        deleteProduct(id: $id) {\\n            id\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar DELETE_PRODUCT_MUTATION = gql(_templateObject());\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log('running the update function after delete');\n  cache.evict();\n}\n\nexport default function DeleteProduct(_ref) {\n  _s();\n\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-warning\",\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm('Are you sure you want to delete this item')) {\n        //go ahead and delete it\n        deleteProduct()[\"catch\"](function (err) {\n          return alert(err.message);\n        });\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteProduct, \"Ps0J/kGno/pxP02U3XEwZE1Q1Tg=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteProduct\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/components/DeleteProduct.js"],"names":["useMutation","gql","DELETE_PRODUCT_MUTATION","update","cache","payload","console","log","evict","DeleteProduct","id","children","variables","deleteProduct","loading","error","confirm","err","alert","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,uBAAuB,GAAGD,GAAH,mBAA7B;;AASA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAH,EAAAA,KAAK,CAACI,KAAN;AACH;;AAED,eAAe,SAASC,aAAT,OAAyC;AAAA;;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,qBACRX,WAAW,CACtDE,uBADsD,EAC7B;AACtBU,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF,KADW;AAEtBP,IAAAA,MAAM,EAAEA;AAFc,GAD6B,CADH;AAAA;AAAA,MAC7CU,aAD6C;AAAA;AAAA,MAC5BC,OAD4B,kBAC5BA,OAD4B;AAAA,MACnBC,KADmB,kBACnBA,KADmB;;AAMpD,sBACI;AACA,IAAA,SAAS,EAAC,iBADV;AAEA,IAAA,IAAI,EAAC,QAFL;AAGA,IAAA,QAAQ,EAAED,OAHV;AAIA,IAAA,OAAO,EAAE,mBAAM;AACX,UAAGE,OAAO,CAAC,2CAAD,CAAV,EAAwD;AACpD;AACAH,QAAAA,aAAa,WAAb,CAAsB,UAACI,GAAD;AAAA,iBAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAd;AAAA,SAAtB;AACH;AACJ,KATD;AAAA,cAUKR;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GApBuBF,a;UACwBT,W;;;KADxBS,a","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst DELETE_PRODUCT_MUTATION = gql`\r\n    mutation DELETE_PRODUCT_MUTATION($id: ID!) {\r\n        deleteProduct(id: $id) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nfunction update(cache, payload) {\r\n    console.log(payload);\r\n    console.log('running the update function after delete');\r\n    cache.evict()\r\n}\r\n\r\nexport default function DeleteProduct({ id, children }) {\r\n    const [deleteProduct, { loading, error }] = useMutation \r\n    (DELETE_PRODUCT_MUTATION, {\r\n        variables: { id },\r\n        update: update\r\n    });\r\n    return (\r\n        <button \r\n        className=\"btn btn-warning\" \r\n        type=\"button\" \r\n        disabled={loading}\r\n        onClick={() => {\r\n            if(confirm('Are you sure you want to delete this item')){\r\n                //go ahead and delete it\r\n                deleteProduct().catch((err) => alert(err.message));\r\n            }\r\n        }}>\r\n            {children}\r\n        </button>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}