{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\stax-of-stories-2\\\\stax2\\\\frontend\\\\lib\\\\CartState.js\";\nimport { createContext, useContext } from 'react';\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  // This is our own custom provider! We will store data (state) and functionality\n  // updaters in here and anyone can access it via the consumer!\n  const [cartOpen, setCartOpen] = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {}\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen,\n      setCartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\nfunction useCart() {\n  // We use a consumer here to access the local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/lib/CartState.js"],"names":["createContext","useContext","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","useState","toggleCart","closeCart","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAEA,MAAMC,iBAAiB,gBAAGF,aAAa,EAAvC;AACA,MAAMG,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACrC;AACA;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASC,UAAT,GAAsB;AAClBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASI,SAAT,GAAqB,CAEpB;;AAED,sBACI,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA3B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,C,CAED;;;AACA,SAASM,OAAT,GAAmB;AACf;AACA,QAAMC,GAAG,GAAGZ,UAAU,CAACC,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACH;;AACD,SAASR,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nfunction CartStateProvider({ children }) {\r\n    // This is our own custom provider! We will store data (state) and functionality\r\n    // updaters in here and anyone can access it via the consumer!\r\n\r\n    const [cartOpen, setCartOpen] = useState(false);\r\n\r\n    function toggleCart() {\r\n        setCartOpen(!cartOpen);\r\n    }\r\n\r\n    function closeCart() {\r\n        \r\n    }\r\n\r\n    return (\r\n        <LocalStateProvider value={{ cartOpen, setCartOpen }}>\r\n            {children}\r\n        </LocalStateProvider>\r\n    );\r\n}\r\n\r\n// make a custom hook for accessing the cart local state\r\nfunction useCart() {\r\n    // We use a consumer here to access the local state\r\n    const all = useContext(LocalStateContext);\r\n    return all;\r\n}\r\nexport { CartStateProvider, useCart };"]},"metadata":{},"sourceType":"module"}