{"ast":null,"code":"import _defineProperty from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nexport default function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // create a state object for our inputs\n  var _useState = useState(initial),\n      inputs = _useState[0],\n      setInputs = _useState[1]; // {\n  //   name: 'wes',\n  //   description: 'nice shoes',\n  //   price: 1000\n  // }\n\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name,\n        type = _e$target.type;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      var _e$target$files = _slicedToArray(e.target.files, 1);\n\n      value = _e$target$files[0];\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  }\n\n  function onChangePicture(e) {\n    if (e.target.files[0]) {\n      console.log(\"picture: \", e.target.files);\n      setPicture(e.target.files[0]);\n      var reader = new FileReader();\n      reader.addEventListener(\"load\", function () {\n        setImgData(reader.result);\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  ;\n\n  function resetForm() {\n    setInputs(initial);\n  }\n\n  function clearForm() {\n    var blankState = Object.fromEntries(Object.entries(inputs).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return [key, ''];\n    }));\n    setInputs(blankState);\n  } // return the things we want to surface from this custom hook\n\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange,\n    resetForm: resetForm,\n    clearForm: clearForm,\n    onChangePicture: onChangePicture\n  };\n}\n\n_s(useForm, \"0tjT+aoDVbAe0wsQZsq9AKLCE20=\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories-2/stax2/frontend/lib/useForm.js"],"names":["useState","useForm","initial","inputs","setInputs","handleChange","e","target","value","name","type","parseInt","files","onChangePicture","console","log","setPicture","reader","FileReader","addEventListener","setImgData","result","readAsDataURL","resetForm","clearForm","blankState","Object","fromEntries","entries","map","key"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,OAAT,GAA+B;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC5C;AAD4C,kBAEhBF,QAAQ,CAACE,OAAD,CAFQ;AAAA,MAErCC,MAFqC;AAAA,MAE7BC,SAF6B,iBAI5C;AACA;AACA;AACA;AACA;;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,oBACKA,CAAC,CAACC,MADP;AAAA,QACjBC,KADiB,aACjBA,KADiB;AAAA,QACVC,IADU,aACVA,IADU;AAAA,QACJC,IADI,aACJA,IADI;;AAEvB,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGG,QAAQ,CAACH,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AAAA,2CACTJ,CAAC,CAACC,MAAF,CAASK,KADA;;AAClBJ,MAAAA,KADkB;AAEpB;;AACDJ,IAAAA,SAAS,iCAEJD,MAFI,2BAGNM,IAHM,EAGCD,KAHD,GAAT;AAKD;;AAED,WAASK,eAAT,CAA0BP,CAA1B,EAA6B;AAC3B,QAAIA,CAAC,CAACC,MAAF,CAASK,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrBE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,CAAC,CAACC,MAAF,CAASK,KAAlC;AACAI,MAAAA,UAAU,CAACV,CAAC,CAACC,MAAF,CAASK,KAAT,CAAe,CAAf,CAAD,CAAV;AACA,UAAMK,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpCC,QAAAA,UAAU,CAACH,MAAM,CAACI,MAAR,CAAV;AACD,OAFD;AAGAJ,MAAAA,MAAM,CAACK,aAAP,CAAqBhB,CAAC,CAACC,MAAF,CAASK,KAAT,CAAe,CAAf,CAArB;AACD;AACF;;AAAA;;AAED,WAASW,SAAT,GAAqB;AACnBnB,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD;;AAED,WAASsB,SAAT,GAAqB;AACnB,QAAMC,UAAU,GAAGC,MAAM,CAACC,WAAP,CACjBD,MAAM,CAACE,OAAP,CAAezB,MAAf,EAAuB0B,GAAvB,CAA2B;AAAA;AAAA,UAAEC,GAAF;AAAA,UAAOtB,KAAP;;AAAA,aAAkB,CAACsB,GAAD,EAAM,EAAN,CAAlB;AAAA,KAA3B,CADiB,CAAnB;AAGA1B,IAAAA,SAAS,CAACqB,UAAD,CAAT;AACD,GA9C2C,CAgD5C;;;AACA,SAAO;AACLtB,IAAAA,MAAM,EAANA,MADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLkB,IAAAA,SAAS,EAATA,SAHK;AAILC,IAAAA,SAAS,EAATA,SAJK;AAKLX,IAAAA,eAAe,EAAfA;AALK,GAAP;AAOD;;GAxDuBZ,O","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function useForm(initial = {}) {\r\n  // create a state object for our inputs\r\n  const [inputs, setInputs] = useState(initial);\r\n\r\n  // {\r\n  //   name: 'wes',\r\n  //   description: 'nice shoes',\r\n  //   price: 1000\r\n  // }\r\n\r\n  function handleChange(e) {\r\n    let { value, name, type } = e.target;\r\n    if (type === 'number') {\r\n      value = parseInt(value);\r\n    }\r\n    if (type === 'file') {\r\n      [value] = e.target.files;\r\n    }\r\n    setInputs({\r\n      // copy the existing state\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function onChangePicture (e) {\r\n    if (e.target.files[0]) {\r\n      console.log(\"picture: \", e.target.files);\r\n      setPicture(e.target.files[0]);\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        setImgData(reader.result);\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  function resetForm() {\r\n    setInputs(initial);\r\n  }\r\n\r\n  function clearForm() {\r\n    const blankState = Object.fromEntries(\r\n      Object.entries(inputs).map(([key, value]) => [key, ''])\r\n    );\r\n    setInputs(blankState);\r\n  }\r\n\r\n  // return the things we want to surface from this custom hook\r\n  return {\r\n    inputs,\r\n    handleChange,\r\n    resetForm,\r\n    clearForm,\r\n    onChangePicture,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}