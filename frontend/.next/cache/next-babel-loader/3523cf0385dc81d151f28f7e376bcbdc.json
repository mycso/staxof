{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint, prodEndpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\nimport { TOGGLE_CART_MUTATION } from '../components/Cart';\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers: headers\n      });\n    },\n    //local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart: function toggleCart(_, variables, _ref2) {\n            var cache = _ref2.cache;\n\n            // read the cartOpen value from the cache\n            var _cache$readQuery = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            }),\n                cartOpen = _cache$readQuery.cartOpen; // Write the cart State to the opposite\n\n\n            var data = {\n              data: {\n                cartOpen: !cartOpen\n              }\n            };\n            cache.writeData(data);\n            return data;\n          }\n        }\n      },\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/stax-of-stories/stax-shop/Advanced-React/stax/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","prodEndpoint","LOCAL_STATE_QUERY","TOGGLE_CART_MUTATION","createClient","headers","uri","process","env","NODE_ENV","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","Mutation","toggleCart","_","variables","cache","readQuery","query","cartOpen","data","writeData","defaults"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,WAAvC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,oBAAT,QAAqC,oBAArC;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIN,YAAJ,CAAiB;AACtBO,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCT,QAAzC,GAAoDC,YADnC;AAEtBS,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBT,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KATqB;AAUtB;AACAU,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UADQ,sBACGC,CADH,EACMC,SADN,SAC2B;AAAA,gBAARC,KAAQ,SAARA,KAAQ;;AACjC;AADiC,mCAEZA,KAAK,CAACC,SAAN,CAAgB;AACnCC,cAAAA,KAAK,EAAErB;AAD4B,aAAhB,CAFY;AAAA,gBAEzBsB,QAFyB,oBAEzBA,QAFyB,EAKjC;;;AACA,gBAAMC,IAAI,GAAG;AACXA,cAAAA,IAAI,EAAE;AAAED,gBAAAA,QAAQ,EAAE,CAACA;AAAb;AADK,aAAb;AAGAH,YAAAA,KAAK,CAACK,SAAN,CAAgBD,IAAhB;AACA,mBAAOA,IAAP;AACD;AAZO;AADD,OADA;AAiBXE,MAAAA,QAAQ,EAAE;AACRH,QAAAA,QAAQ,EAAE;AADF;AAjBC;AAXS,GAAjB,CAAP;AAiCD;;AAED,eAAe1B,UAAU,CAACM,YAAD,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { endpoint, prodEndpoint } from '../config';\r\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\r\nimport { TOGGLE_CART_MUTATION } from '../components/Cart';\r\n\r\nfunction createClient({ headers }) {\r\n  return new ApolloClient({\r\n    uri: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\r\n    request: operation => {\r\n      operation.setContext({\r\n        fetchOptions: {\r\n          credentials: 'include',\r\n        },\r\n        headers,\r\n      });\r\n    },\r\n    //local data\r\n    clientState: {\r\n      resolvers: {\r\n        Mutation: {\r\n          toggleCart(_, variables, { cache }){\r\n            // read the cartOpen value from the cache\r\n            const { cartOpen } = cache.readQuery({\r\n              query: LOCAL_STATE_QUERY,\r\n            });\r\n            // Write the cart State to the opposite\r\n            const data = {\r\n              data: { cartOpen: !cartOpen },\r\n            };\r\n            cache.writeData(data);\r\n            return data;\r\n          },\r\n        },\r\n      },\r\n      defaults: {\r\n        cartOpen: false,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport default withApollo(createClient);\r\n"]},"metadata":{},"sourceType":"module"}